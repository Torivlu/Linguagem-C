#include <stdio.h>

// Cria uma STRUCT para armazenar os dados de uma pessoa
typedef struct
{
    float Peso;   // Define o campo peso
    int Idade;    // Define o campo idade
    float Altura; // Define o campo altura
} Pessoa; // Define o nome do novo tipo criado

// Declara o parâmetro como uma struct
void ImprimePessoa(Pessoa p)
{
    // Corrigido o uso da variável: alterado de P para p
    printf("Idade: %d Peso: %.2f Altura: %.2f\n", p.Idade, p.Peso, p.Altura);
}

int main()
{
    Pessoa Joao, P2;
    Pessoa Povo[10];
   
    Joao.Idade = 15;
    Joao.Peso = 60.5;
    Joao.Altura = 1.75;
   
    Povo[4].Idade = 23;
    Povo[4].Peso = 75.3;
    Povo[4].Altura = 1.89;
   
    P2 = Povo[4];
    P2.Idade++;
   
    // Chama função que recebe a struct como parâmetro
    ImprimePessoa(Joao);
    ImprimePessoa(Povo[4]);
    ImprimePessoa(P2);
   
    return 0;
}

/*struct aluno{
//int ra;
char nome[100];
char curso[20];
// declaração do tipo de dados (estrutura);
};

 typedef struct aluno t_aluno;
 
int main(){

 t_aluno p;
//struct aluno p; //declaração do tipo struct

//fgets(aluno.nome, 50, stdin);
scanf("%d", &p.ra);
scanf("%s", p.nome);
scanf("%s", p.curso);

printf("RA=%d Nome=%s\n", p.ra, p.nome, p.curso);

return 0;

}*/
/* struct aluno{  
int ra;
char nome[100];
char curso[20];
};*/

/* struct aluno aluno1; herda tudo oq tem acima
struct aluno alunos[30]

CUIDADOS: a struct continua sendo a struct aluno.

Para declarar uma variável do tipo struct aluno:

struct aluno aluno1;
struct aluno aluno2, aluno3;
-tipo da variável---


Para acessar membros da estrutura, usamos o ponto:

struct aluno{
int ra;
char nome[100];
char curso[20];

struct aluno a1;
a1.ra  = 123;

struct aluno a2, a3;
a2.ra = 100;
a3.ra = 200;

scanf("%d", &a2.ra);
scanf("%s", a2.curso);
};

*/

/* Outro Exemplo

- Estrutura para armazenar um ponto de duas dimensões:

typedef struct ponto t_ponto;
struct ponto {
int x, y;
}; */
